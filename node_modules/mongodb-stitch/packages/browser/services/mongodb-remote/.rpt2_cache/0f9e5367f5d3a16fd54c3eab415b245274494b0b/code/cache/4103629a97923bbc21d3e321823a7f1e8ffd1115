{"code":"import RemoteMongoReadOperation from \"../RemoteMongoReadOperation\";\r\nvar RemoteMongoCollectionImpl = (function () {\r\n    function RemoteMongoCollectionImpl(proxy) {\r\n        this.proxy = proxy;\r\n        this.namespace = this.proxy.namespace;\r\n    }\r\n    RemoteMongoCollectionImpl.prototype.withCollectionType = function (codec) {\r\n        return new RemoteMongoCollectionImpl(this.proxy.withCollectionType(codec));\r\n    };\r\n    RemoteMongoCollectionImpl.prototype.count = function (query, options) {\r\n        return this.proxy.count(query, options);\r\n    };\r\n    RemoteMongoCollectionImpl.prototype.find = function (query, options) {\r\n        return new RemoteMongoReadOperation(this.proxy.find(query, options));\r\n    };\r\n    RemoteMongoCollectionImpl.prototype.aggregate = function (pipeline) {\r\n        return new RemoteMongoReadOperation(this.proxy.aggregate(pipeline));\r\n    };\r\n    RemoteMongoCollectionImpl.prototype.insertOne = function (doc) {\r\n        return this.proxy.insertOne(doc);\r\n    };\r\n    RemoteMongoCollectionImpl.prototype.insertMany = function (docs) {\r\n        return this.proxy.insertMany(docs);\r\n    };\r\n    RemoteMongoCollectionImpl.prototype.deleteOne = function (query) {\r\n        return this.proxy.deleteOne(query);\r\n    };\r\n    RemoteMongoCollectionImpl.prototype.deleteMany = function (query) {\r\n        return this.proxy.deleteMany(query);\r\n    };\r\n    RemoteMongoCollectionImpl.prototype.updateOne = function (query, update, updateOptions) {\r\n        return this.proxy.updateOne(query, update, updateOptions);\r\n    };\r\n    RemoteMongoCollectionImpl.prototype.updateMany = function (query, update, updateOptions) {\r\n        return this.proxy.updateMany(query, update, updateOptions);\r\n    };\r\n    return RemoteMongoCollectionImpl;\r\n}());\r\nexport default RemoteMongoCollectionImpl;\r\n//# sourceMappingURL=RemoteMongoCollectionImpl.js.map","map":"{\"version\":3,\"file\":\"RemoteMongoCollectionImpl.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../src/internal/RemoteMongoCollectionImpl.ts\"],\"names\":[],\"mappings\":\"AA4BA,OAAO,wBAAwB,MAAM,6BAA6B,CAAC;AAGnE;IAQE,mCACmB,KAA2C;QAA3C,UAAK,GAAL,KAAK,CAAsC;QAH9C,cAAS,GAAW,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC;IAItD,CAAC;IAUG,sDAAkB,GAAzB,UAA6B,KAAe;QAC1C,OAAO,IAAI,yBAAyB,CAClC,IAAI,CAAC,KAAK,CAAC,kBAAkB,CAAC,KAAK,CAAC,CACrC,CAAC;IACJ,CAAC;IASM,yCAAK,GAAZ,UAAa,KAAc,EAAE,OAA4B;QACvD,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;IAC1C,CAAC;IAQM,wCAAI,GAAX,UACE,KAAc,EACd,OAA2B;QAE3B,OAAO,IAAI,wBAAwB,CACjC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,EAAE,OAAO,CAAC,CAChC,CAAC;IACJ,CAAC;IAQM,6CAAS,GAAhB,UAAiB,QAAkB;QACjC,OAAO,IAAI,wBAAwB,CACjC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,QAAQ,CAAC,CAC/B,CAAC;IACJ,CAAC;IASM,6CAAS,GAAhB,UAAiB,GAAc;QAC7B,OAAO,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;IACnC,CAAC;IAQM,8CAAU,GAAjB,UAAkB,IAAiB;QACjC,OAAO,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;IACrC,CAAC;IAUM,6CAAS,GAAhB,UAAiB,KAAa;QAC5B,OAAO,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;IACrC,CAAC;IASM,8CAAU,GAAjB,UAAkB,KAAa;QAC7B,OAAO,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IACtC,CAAC;IAWM,6CAAS,GAAhB,UACE,KAAa,EACb,MAAc,EACd,aAAmC;QAEnC,OAAO,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,KAAK,EAAE,MAAM,EAAE,aAAa,CAAC,CAAC;IAC5D,CAAC;IAWM,8CAAU,GAAjB,UACE,KAAa,EACb,MAAc,EACd,aAAmC;QAEnC,OAAO,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,KAAK,EAAE,MAAM,EAAE,aAAa,CAAC,CAAC;IAC7D,CAAC;IACH,gCAAC;AAAD,CAAC,AA7ID,IA6IC\"}","dts":{"name":"/Users/eric/stitch/stitch-js-sdk/packages/browser/services/mongodb-remote/.rpt2_cache/placeholder/internal/RemoteMongoCollectionImpl.d.ts","text":"import { Codec } from \"mongodb-stitch-core-sdk\";\r\nimport { CoreRemoteMongoCollection, RemoteCountOptions, RemoteDeleteResult, RemoteFindOptions, RemoteInsertManyResult, RemoteInsertOneResult, RemoteUpdateOptions, RemoteUpdateResult } from \"mongodb-stitch-core-services-mongodb-remote\";\r\nimport RemoteMongoCollection from \"../RemoteMongoCollection\";\r\nimport RemoteMongoReadOperation from \"../RemoteMongoReadOperation\";\r\nexport default class RemoteMongoCollectionImpl<DocumentT> {\r\n    private readonly proxy;\r\n    readonly namespace: string;\r\n    constructor(proxy: CoreRemoteMongoCollection<DocumentT>);\r\n    withCollectionType<U>(codec: Codec<U>): RemoteMongoCollection<U>;\r\n    count(query?: object, options?: RemoteCountOptions): Promise<number>;\r\n    find(query?: object, options?: RemoteFindOptions): RemoteMongoReadOperation<DocumentT>;\r\n    aggregate(pipeline: object[]): RemoteMongoReadOperation<DocumentT>;\r\n    insertOne(doc: DocumentT): Promise<RemoteInsertOneResult>;\r\n    insertMany(docs: DocumentT[]): Promise<RemoteInsertManyResult>;\r\n    deleteOne(query: object): Promise<RemoteDeleteResult>;\r\n    deleteMany(query: object): Promise<RemoteDeleteResult>;\r\n    updateOne(query: object, update: object, updateOptions?: RemoteUpdateOptions): Promise<RemoteUpdateResult>;\r\n    updateMany(query: object, update: object, updateOptions?: RemoteUpdateOptions): Promise<RemoteUpdateResult>;\r\n}\r\n"}}
