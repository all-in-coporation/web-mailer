{"version":3,"file":"stitch-services-aws-ses.js","sources":["../../../../../core/services/aws-ses/dist/esm/AwsSesSendResult.js","../../../../../core/services/aws-ses/dist/esm/internal/CoreAwsSesServiceClient.js","../../src/internal/AwsSesServiceClientImpl.ts","../../src/AwsSesServiceClient.ts"],"sourcesContent":["var Fields;\n(function (Fields) {\n    Fields[\"MessageId\"] = \"messageId\";\n})(Fields || (Fields = {}));\nvar AwsSesSendResult = (function () {\n    function AwsSesSendResult(messageId) {\n        this.messageId = messageId;\n    }\n    AwsSesSendResult.Decoder = new (function () {\n        function class_1() {\n        }\n        class_1.prototype.decode = function (from) {\n            return { messageId: from[Fields.MessageId] };\n        };\n        return class_1;\n    }())();\n    return AwsSesSendResult;\n}());\nexport default AwsSesSendResult;\n//# sourceMappingURL=AwsSesSendResult.js.map","import AwsSesSendResult from \"../AwsSesSendResult\";\nvar CoreAwsSesServiceClient = (function () {\n    function CoreAwsSesServiceClient(service) {\n        this.service = service;\n    }\n    CoreAwsSesServiceClient.prototype.sendEmail = function (toAddress, fromAddress, subject, body) {\n        var args = {\n            body: body,\n            fromAddress: fromAddress,\n            subject: subject,\n            toAddress: toAddress\n        };\n        return this.service.callFunction(\"send\", [args], AwsSesSendResult.Decoder);\n    };\n    return CoreAwsSesServiceClient;\n}());\nexport default CoreAwsSesServiceClient;\n//# sourceMappingURL=CoreAwsSesServiceClient.js.map","/**\n * Copyright 2018-present MongoDB, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AwsSesSendResult,\n  CoreAwsSesServiceClient\n} from \"mongodb-stitch-core-services-aws-ses\";\nimport { AwsSesServiceClient } from \"../AwsSesServiceClient\";\n\n/** \n * @hidden\n * \n * @deprecated use AwsServiceClient instead.\n */\nexport default class AwsSesServiceClientImpl implements AwsSesServiceClient {\n  public constructor(private readonly proxy: CoreAwsSesServiceClient) {}\n\n  /**\n   * Sends an email.\n   *\n   * @param to the email address to send the email to.\n   * @param from the email address to send the email from.\n   * @param subject the subject of the email.\n   * @return a task containing the result of the send that completes when the send is done.\n   */\n  public sendEmail(\n    to: string,\n    from: string,\n    subject: string,\n    body: string\n  ): Promise<AwsSesSendResult> {\n    return this.proxy.sendEmail(to, from, subject, body);\n  }\n}\n","/**\n * Copyright 2018-present MongoDB, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NamedServiceClientFactory } from \"mongodb-stitch-browser-core\";\nimport { \n  StitchAppClientInfo,\n  CoreStitchServiceClient\n} from \"mongodb-stitch-core-sdk\";\nimport {\n  AwsSesSendResult,\n  CoreAwsSesServiceClient\n} from \"mongodb-stitch-core-services-aws-ses\";\nimport AwsSesServiceClientImpl from \"./internal/AwsSesServiceClientImpl\";\n\n/**\n * The AWS SES service client.\n * \n * @deprecated use AwsServiceClient instead.\n */\nexport interface AwsSesServiceClient {\n  /**\n   * Sends an email.\n   *\n   * @param to the email address to send the email to.\n   * @param from the email address to send the email from.\n   * @param subject the subject of the email.\n   * @param body the body text of the email.\n   * @return a Promise containing the result of the send that completes when the send is done.\n   */\n  sendEmail(\n    to: string,\n    from: string,\n    subject: string,\n    body: string\n  ): Promise<AwsSesSendResult>;\n}\n\nexport namespace AwsSesServiceClient {\n  export const factory: NamedServiceClientFactory<\n    AwsSesServiceClient\n  > = new class implements NamedServiceClientFactory<AwsSesServiceClient> {\n    public getNamedClient(\n      service: CoreStitchServiceClient,\n      client: StitchAppClientInfo\n    ): AwsSesServiceClient {\n      return new AwsSesServiceClientImpl(new CoreAwsSesServiceClient(service));\n    }\n  }();\n}\n"],"names":["Fields","AwsSesSendResult","messageId","this","Decoder","class_1","prototype","decode","from","MessageId","CoreAwsSesServiceClient","service","sendEmail","toAddress","fromAddress","subject","body","args","callFunction","proxy","AwsSesServiceClientImpl","to","AwsSesServiceClient","client"],"mappings":"0BAAA,IAAIA,GAGDA,IAAWA,EAAS,KADD,UAAI,YAE1B,IAAIC,EAAoB,WACpB,SAASA,EAAiBC,GACtBC,KAAKD,UAAYA,EAUrB,OARAD,EAAiBG,QAAU,IAAK,WAC5B,SAASC,KAKT,OAHAA,EAAQC,UAAUC,OAAS,SAAUC,GACjC,MAAO,CAAEN,UAAWM,EAAKR,EAAOS,aAE7BJ,MAEJJ,KCfPS,EAA2B,WAC3B,SAASA,EAAwBC,GAC7BR,KAAKQ,QAAUA,EAWnB,OATAD,EAAwBJ,UAAUM,UAAY,SAAUC,EAAWC,EAAaC,EAASC,GACrF,IAAIC,EAAO,CACPD,KAAMA,EACNF,YAAaA,EACbC,QAASA,EACTF,UAAWA,GAEf,OAAOV,KAAKQ,QAAQO,aAAa,OAAQ,CAACD,GAAOhB,EAAiBG,UAE/DM,kBCcT,WAAoCS,GAAAhB,WAAAgB,EAkBtC,OARSC,sBAAP,SACEC,EACAb,EACAO,EACAC,GAEA,OAAOb,KAAKgB,MAAMP,UAAUS,EAAIb,EAAMO,EAASC,UCMlCM,wBAAAA,mCAGX,eAAI,cAOR,OANSjB,2BAAP,SACEM,EACAY,GAEA,OAAO,IAAIH,EAAwB,IAAIV,EAAwBC"}