{"version":3,"file":"stitch-services-aws.js","sources":["../../../../../core/services/aws/dist/esm/AwsRequest.js","../../../../../core/services/aws/dist/esm/internal/CoreAwsServiceClient.js","../../src/internal/AwsServiceClientImpl.ts","../../src/AwsServiceClient.ts"],"sourcesContent":["var AwsRequest = (function () {\n    function AwsRequest(service, action, region, args) {\n        this.service = service;\n        this.action = action;\n        this.region = region;\n        this.args = args;\n    }\n    return AwsRequest;\n}());\nexport { AwsRequest };\n(function (AwsRequest) {\n    var Builder = (function () {\n        function Builder() {\n        }\n        Builder.prototype.withService = function (service) {\n            this.service = service;\n            return this;\n        };\n        Builder.prototype.withAction = function (action) {\n            this.action = action;\n            return this;\n        };\n        Builder.prototype.withRegion = function (region) {\n            this.region = region;\n            return this;\n        };\n        Builder.prototype.withArgs = function (args) {\n            this.args = args;\n            return this;\n        };\n        Builder.prototype.build = function () {\n            if (!this.service || this.service == \"\") {\n                throw new Error(\"must set service\");\n            }\n            if (!this.action || this.action == \"\") {\n                throw new Error(\"must set action\");\n            }\n            return new AwsRequest(this.service, this.action, this.region, this.args || {});\n        };\n        return Builder;\n    }());\n    AwsRequest.Builder = Builder;\n})(AwsRequest || (AwsRequest = {}));\n//# sourceMappingURL=AwsRequest.js.map","var Fields;\n(function (Fields) {\n    Fields[\"ExecuteActionName\"] = \"execute\";\n    Fields[\"ServiceParam\"] = \"aws_service\";\n    Fields[\"ActionParam\"] = \"aws_action\";\n    Fields[\"RegionParam\"] = \"aws_region\";\n    Fields[\"ArgumentsParam\"] = \"aws_arguments\";\n})(Fields || (Fields = {}));\nvar CoreAwsServiceClient = (function () {\n    function CoreAwsServiceClient(service) {\n        this.service = service;\n    }\n    CoreAwsServiceClient.prototype.execute = function (request, decoder) {\n        return this.service.callFunction(Fields.ExecuteActionName, [this.getRequestArgs(request)], decoder);\n    };\n    CoreAwsServiceClient.prototype.getRequestArgs = function (request) {\n        var _a;\n        var args = (_a = {},\n            _a[Fields.ServiceParam] = request.service,\n            _a[Fields.ActionParam] = request.action,\n            _a[Fields.ArgumentsParam] = request.args,\n            _a);\n        if (request.region) {\n            args[Fields.RegionParam] = request.region;\n        }\n        return args;\n    };\n    return CoreAwsServiceClient;\n}());\nexport default CoreAwsServiceClient;\n//# sourceMappingURL=CoreAwsServiceClient.js.map","/**\n * Copyright 2018-present MongoDB, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Decoder } from \"mongodb-stitch-core-sdk\";\nimport { \n  AwsRequest, \n  CoreAwsServiceClient \n} from \"mongodb-stitch-core-services-aws\";\nimport { AwsServiceClient } from \"../AwsServiceClient\";\n\n /**\n  * The AWS service client.\n  */\nexport default class AwsServiceClientImpl implements AwsServiceClient {\n  \n  public constructor(private readonly proxy: CoreAwsServiceClient) {}\n\n  public execute<T>(\n    request: AwsRequest,\n    decoder?: Decoder<T>\n  ): Promise<T> {\n    return this.proxy.execute(request, decoder);\n  }\n}\n","/**\n * Copyright 2018-present MongoDB, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  NamedServiceClientFactory\n} from \"mongodb-stitch-browser-core\";\nimport { \n  CoreStitchServiceClient,\n  StitchAppClientInfo \n} from \"mongodb-stitch-core-sdk\";\nimport { \n  AwsRequest, \n  CoreAwsServiceClient \n} from \"mongodb-stitch-core-services-aws\";\nimport { Decoder } from \"mongodb-stitch-core-sdk\";\nimport AwsServiceClientImpl from \"./internal/AwsServiceClientImpl\";\n\n /**\n  * The AWS service client.\n  */\nexport interface AwsServiceClient {\n  \n  /**\n   * Executes the AWS request.\n   * \n   * @param request the AWS request to execute.\n   * @param decoder the optional decoder to use to decode the result into a \n   *                value.\n   */\n  execute<T>(\n    request: AwsRequest,\n    decoder?: Decoder<T>\n  ): Promise<T>\n}\n\nexport namespace AwsServiceClient {\n  export const factory: NamedServiceClientFactory<\n    AwsServiceClient\n  > = new class implements NamedServiceClientFactory<AwsServiceClient> {\n    public getNamedClient(\n      service: CoreStitchServiceClient,\n      client: StitchAppClientInfo\n    ): AwsServiceClient {\n      return new AwsServiceClientImpl(new CoreAwsServiceClient(service));\n    }\n  }();\n}\n"],"names":["AwsRequest","Builder","Fields","service","action","region","args","this","prototype","withService","withAction","withRegion","withArgs","build","Error","CoreAwsServiceClient","execute","request","decoder","callFunction","ExecuteActionName","getRequestArgs","_a","ServiceParam","ActionParam","ArgumentsParam","RegionParam","proxy","AwsServiceClientImpl","AwsServiceClient","class_1","client"],"mappings":"0BAUA,IAAWA,EACHC,ECXJC,EACOA,eDAP,SAAoBC,EAASC,EAAQC,EAAQC,GACzCC,KAAKJ,QAAUA,EACfI,KAAKH,OAASA,EACdG,KAAKF,OAASA,EACdE,KAAKD,KAAOA,GAKTN,EAgCRA,eAAeA,aAAa,IA/BvBC,EAAW,WACX,SAASA,KA2BT,OAzBAA,EAAQO,UAAUC,YAAc,SAAUN,GAEtC,OADAI,KAAKJ,QAAUA,EACRI,MAEXN,EAAQO,UAAUE,WAAa,SAAUN,GAErC,OADAG,KAAKH,OAASA,EACPG,MAEXN,EAAQO,UAAUG,WAAa,SAAUN,GAErC,OADAE,KAAKF,OAASA,EACPE,MAEXN,EAAQO,UAAUI,SAAW,SAAUN,GAEnC,OADAC,KAAKD,KAAOA,EACLC,MAEXN,EAAQO,UAAUK,MAAQ,WACtB,IAAKN,KAAKJ,SAA2B,IAAhBI,KAAKJ,QACtB,MAAM,IAAIW,MAAM,oBAEpB,IAAKP,KAAKH,QAAyB,IAAfG,KAAKH,OACrB,MAAM,IAAIU,MAAM,mBAEpB,OAAO,IAAId,EAAWO,KAAKJ,QAASI,KAAKH,OAAQG,KAAKF,OAAQE,KAAKD,MAAQ,KAExEL,KAEXD,EAAWC,QAAUA,GCxCdC,EAMRA,IAAWA,EAAS,KALO,kBAAI,UAC9BA,EAAqB,aAAI,cACzBA,EAAoB,YAAI,aACxBA,EAAoB,YAAI,aACxBA,EAAuB,eAAI,gBAE/B,IAAIa,EAAwB,WACxB,SAASA,EAAqBZ,GAC1BI,KAAKJ,QAAUA,EAiBnB,OAfAY,EAAqBP,UAAUQ,QAAU,SAAUC,EAASC,GACxD,OAAOX,KAAKJ,QAAQgB,aAAajB,EAAOkB,kBAAmB,CAACb,KAAKc,eAAeJ,IAAWC,IAE/FH,EAAqBP,UAAUa,eAAiB,SAAUJ,GACtD,IAAIK,EACAhB,IAAQgB,EAAK,IACVpB,EAAOqB,cAAgBN,EAAQd,QAClCmB,EAAGpB,EAAOsB,aAAeP,EAAQb,OACjCkB,EAAGpB,EAAOuB,gBAAkBR,EAAQX,KACpCgB,GAIJ,OAHIL,EAAQZ,SACRC,EAAKJ,EAAOwB,aAAeT,EAAQZ,QAEhCC,GAEJS,kBCCT,WAAoCY,GAAApB,WAAAoB,EAQtC,OANSC,oBAAP,SACEX,EACAC,GAEA,OAAOX,KAAKoB,MAAMX,QAAQC,EAASC,UCctBW,qBAAAA,gCAGX,eAAI,cAOR,OANSC,2BAAP,SACE3B,EACA4B,GAEA,OAAO,IAAIH,EAAqB,IAAIb,EAAqBZ"}