{"version":3,"file":"stitch-services-http.js","sources":["../../../../../core/services/http/dist/esm/HttpCookie.js","../../../../../core/services/http/dist/esm/HttpMethod.js","../../../../../core/services/http/dist/esm/HttpRequest.js","../../../../../core/services/http/dist/esm/HttpResponse.js","../../../../../core/services/http/dist/esm/internal/ResultDecoders.js","../../../../../core/services/http/dist/esm/internal/CoreHttpServiceClient.js","../../src/internal/HttpServiceClientImpl.ts","../../src/HttpServiceClient.ts"],"sourcesContent":["var HttpCookie = (function () {\n    function HttpCookie(name, value, path, domain, expires, maxAge, secure, httpOnly) {\n        this.name = name;\n        this.value = value;\n        this.path = path;\n        this.domain = domain;\n        this.expires = expires;\n        this.maxAge = maxAge;\n        this.secure = secure;\n        this.httpOnly = httpOnly;\n    }\n    return HttpCookie;\n}());\nexport default HttpCookie;\n//# sourceMappingURL=HttpCookie.js.map","export var HttpMethod;\n(function (HttpMethod) {\n    HttpMethod[HttpMethod[\"GET\"] = 0] = \"GET\";\n    HttpMethod[HttpMethod[\"POST\"] = 1] = \"POST\";\n    HttpMethod[HttpMethod[\"PUT\"] = 2] = \"PUT\";\n    HttpMethod[HttpMethod[\"DELETE\"] = 3] = \"DELETE\";\n    HttpMethod[HttpMethod[\"HEAD\"] = 4] = \"HEAD\";\n    HttpMethod[HttpMethod[\"PATCH\"] = 5] = \"PATCH\";\n})(HttpMethod || (HttpMethod = {}));\n//# sourceMappingURL=HttpMethod.js.map","var HttpRequest = (function () {\n    function HttpRequest(url, method, authUrl, headers, cookies, body, encodeBodyAsJson, form, followRedirects) {\n        this.url = url;\n        this.method = method;\n        this.authUrl = authUrl;\n        this.headers = headers;\n        this.cookies = cookies;\n        this.body = body;\n        this.encodeBodyAsJson = encodeBodyAsJson;\n        this.form = form;\n        this.followRedirects = followRedirects;\n    }\n    return HttpRequest;\n}());\nexport { HttpRequest };\n(function (HttpRequest) {\n    var Builder = (function () {\n        function Builder() {\n        }\n        Builder.prototype.withUrl = function (url) {\n            this.url = url;\n            return this;\n        };\n        Builder.prototype.withMethod = function (method) {\n            this.method = method;\n            return this;\n        };\n        Builder.prototype.withAuthUrl = function (authUrl) {\n            this.authUrl = authUrl;\n            return this;\n        };\n        Builder.prototype.withHeaders = function (headers) {\n            this.headers = headers;\n            return this;\n        };\n        Builder.prototype.withCookies = function (cookies) {\n            this.cookies = cookies;\n            return this;\n        };\n        Builder.prototype.withBody = function (body) {\n            this.body = body;\n            return this;\n        };\n        Builder.prototype.withEncodeBodyAsJson = function (encodeBodyAsJson) {\n            this.encodeBodyAsJson = encodeBodyAsJson;\n            return this;\n        };\n        Builder.prototype.withForm = function (form) {\n            this.form = form;\n            return this;\n        };\n        Builder.prototype.withFollowRedirects = function (followRedirects) {\n            this.followRedirects = followRedirects;\n            return this;\n        };\n        Builder.prototype.build = function () {\n            if (this.url == null || this.url === \"\") {\n                throw new Error(\"must set url\");\n            }\n            if (this.method == null) {\n                throw new Error(\"must set method\");\n            }\n            return new HttpRequest(this.url, this.method, this.authUrl, this.headers, this.cookies, this.body, this.encodeBodyAsJson, this.form, this.followRedirects);\n        };\n        return Builder;\n    }());\n    HttpRequest.Builder = Builder;\n})(HttpRequest || (HttpRequest = {}));\n//# sourceMappingURL=HttpRequest.js.map","var HttpResponse = (function () {\n    function HttpResponse(status, statusCode, contentLength, headers, cookies, body) {\n        this.status = status;\n        this.statusCode = statusCode;\n        this.contentLength = contentLength;\n        this.headers = headers;\n        this.cookies = cookies;\n        this.body = body;\n    }\n    return HttpResponse;\n}());\nexport default HttpResponse;\n//# sourceMappingURL=HttpResponse.js.map","import HttpCookie from \"../HttpCookie\";\nimport HttpResponse from \"../HttpResponse\";\nvar Fields;\n(function (Fields) {\n    Fields[\"Status\"] = \"status\";\n    Fields[\"StatusCode\"] = \"statusCode\";\n    Fields[\"ContentLength\"] = \"contentLength\";\n    Fields[\"Headers\"] = \"headers\";\n    Fields[\"Cookies\"] = \"cookies\";\n    Fields[\"Body\"] = \"body\";\n    Fields[\"CookieValue\"] = \"value\";\n    Fields[\"CookiePath\"] = \"path\";\n    Fields[\"CookieDomain\"] = \"domain\";\n    Fields[\"CookieExpires\"] = \"expires\";\n    Fields[\"CookieMaxAge\"] = \"maxAge\";\n    Fields[\"CookieSecure\"] = \"secure\";\n    Fields[\"CookieHttpOnly\"] = \"httpOnly\";\n})(Fields || (Fields = {}));\nvar HttpResponseDecoder = (function () {\n    function HttpResponseDecoder() {\n    }\n    HttpResponseDecoder.prototype.decode = function (document) {\n        var status = document[Fields.Status];\n        var statusCode = document[Fields.StatusCode];\n        var contentLength = document[Fields.ContentLength];\n        var headers;\n        if (document[Fields.Headers]) {\n            headers = {};\n            var headersDoc_1 = document[Fields.Headers];\n            Object.keys(headersDoc_1).forEach(function (headerKey) {\n                var headerValue = headersDoc_1[headerKey];\n                var valuesArr = headerValue;\n                var values = new Array(valuesArr.length);\n                for (var _i = 0, valuesArr_1 = valuesArr; _i < valuesArr_1.length; _i++) {\n                    var value = valuesArr_1[_i];\n                    values.push(value);\n                }\n                headers[headerKey] = values;\n            });\n        }\n        else {\n            headers = undefined;\n        }\n        var cookies;\n        if (document[Fields.Cookies]) {\n            cookies = {};\n            var cookiesDoc = document[Fields.Cookies];\n            for (var _i = 0, cookiesDoc_1 = cookiesDoc; _i < cookiesDoc_1.length; _i++) {\n                var _a = cookiesDoc_1[_i], headerKey = _a[0], headerValue = _a[1];\n                var name = headerKey;\n                var cookieValues = headerValue;\n                var value = cookieValues[Fields.CookieValue];\n                var path = cookieValues[Fields.CookiePath] || undefined;\n                var domain = cookieValues[Fields.CookieDomain] || undefined;\n                var expires = cookieValues[Fields.CookieExpires] || undefined;\n                var maxAge = cookieValues[Fields.CookieMaxAge] || undefined;\n                var secure = cookieValues[Fields.CookieSecure] || undefined;\n                var httpOnly = cookieValues[Fields.CookieHttpOnly] || undefined;\n                cookies.put(headerKey, new HttpCookie(name, value, path, domain, expires, maxAge, secure, httpOnly));\n            }\n        }\n        else {\n            cookies = undefined;\n        }\n        var body = document[Fields.Body] || \"\";\n        return new HttpResponse(status, statusCode, contentLength, headers, cookies, body);\n    };\n    return HttpResponseDecoder;\n}());\nvar ResultDecoders = (function () {\n    function ResultDecoders() {\n    }\n    ResultDecoders.HttpResponseDecoder = new HttpResponseDecoder();\n    return ResultDecoders;\n}());\nexport default ResultDecoders;\n//# sourceMappingURL=ResultDecoders.js.map","import { HttpMethod } from \"../HttpMethod\";\nimport ResultDecoders from \"./ResultDecoders\";\nvar RequestAction;\n(function (RequestAction) {\n    RequestAction[\"GetAction\"] = \"get\";\n    RequestAction[\"PostAction\"] = \"post\";\n    RequestAction[\"PutAction\"] = \"put\";\n    RequestAction[\"DeleteAction\"] = \"delete\";\n    RequestAction[\"HeadAction\"] = \"head\";\n    RequestAction[\"PatchAction\"] = \"patch\";\n    RequestAction[\"HttpUrlParam\"] = \"url\";\n    RequestAction[\"HttpAuthUrlParam\"] = \"authUrl\";\n    RequestAction[\"HttpHeadersUrlParam\"] = \"headers\";\n    RequestAction[\"HttpCookiesParam\"] = \"cookies\";\n    RequestAction[\"HttpBodyParam\"] = \"body\";\n    RequestAction[\"HttpEncodeBodyAsJsonParam\"] = \"encodeBodyAsJSON\";\n    RequestAction[\"HttpFormParam\"] = \"form\";\n    RequestAction[\"HttpFollowRedirectsParam\"] = \"followRedirects\";\n})(RequestAction || (RequestAction = {}));\nvar CoreHttpServiceClient = (function () {\n    function CoreHttpServiceClient(service) {\n        this.service = service;\n        this.service = service;\n    }\n    CoreHttpServiceClient.prototype.execute = function (request) {\n        var action;\n        switch (request.method) {\n            case HttpMethod.GET:\n                action = RequestAction.GetAction;\n                break;\n            case HttpMethod.POST:\n                action = RequestAction.PostAction;\n                break;\n            case HttpMethod.PUT:\n                action = RequestAction.PutAction;\n                break;\n            case HttpMethod.DELETE:\n                action = RequestAction.DeleteAction;\n                break;\n            case HttpMethod.HEAD:\n                action = RequestAction.HeadAction;\n                break;\n            case HttpMethod.PATCH:\n                action = RequestAction.PatchAction;\n                break;\n            default:\n                throw new Error(\"unknown method \" + request.method);\n        }\n        var args = {};\n        args[RequestAction.HttpUrlParam] = request.url;\n        if (request.authUrl !== undefined) {\n            args[RequestAction.HttpAuthUrlParam] = request.authUrl;\n        }\n        if (request.headers !== undefined) {\n            args[RequestAction.HttpHeadersUrlParam] = request.headers;\n        }\n        if (request.cookies !== undefined) {\n            args[RequestAction.HttpCookiesParam] = request.cookies;\n        }\n        if (request.body !== undefined) {\n            args[RequestAction.HttpBodyParam] = request.body;\n        }\n        if (request.encodeBodyAsJson !== undefined) {\n            args[RequestAction.HttpEncodeBodyAsJsonParam] = request.encodeBodyAsJson;\n        }\n        if (request.form !== undefined) {\n            args[RequestAction.HttpFormParam] = request.form;\n        }\n        if (request.followRedirects !== undefined) {\n            args[RequestAction.HttpFollowRedirectsParam] = request.followRedirects;\n        }\n        return this.service.callFunction(action, [args], ResultDecoders.HttpResponseDecoder);\n    };\n    return CoreHttpServiceClient;\n}());\nexport default CoreHttpServiceClient;\n//# sourceMappingURL=CoreHttpServiceClient.js.map","/**\n * Copyright 2018-present MongoDB, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  CoreHttpServiceClient,\n  HttpRequest,\n  HttpResponse\n} from \"mongodb-stitch-core-services-http\";\nimport { HttpServiceClient } from \"../HttpServiceClient\";\n\n/** @hidden */\nexport default class HttpServiceClientImpl implements HttpServiceClient {\n  public constructor(private readonly proxy: CoreHttpServiceClient) {}\n\n  /**\n   * Executes the given {@link HttpRequest}.\n   *\n   * @param request the request to execute.\n   * @return a task containing the response to executing the request.\n   */\n  public execute(request: HttpRequest): Promise<HttpResponse> {\n    return this.proxy.execute(request);\n  }\n}\n","/**\n * Copyright 2018-present MongoDB, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NamedServiceClientFactory } from \"mongodb-stitch-browser-core\";\nimport { \n  StitchAppClientInfo, \n  CoreStitchServiceClient \n} from \"mongodb-stitch-core-sdk\";\nimport {\n  CoreHttpServiceClient,\n  HttpRequest,\n  HttpResponse\n} from \"mongodb-stitch-core-services-http\";\nimport HttpServiceClientImpl from \"./internal/HttpServiceClientImpl\";\n\n/**\n * The HTTP service client.\n */\nexport interface HttpServiceClient {\n  /**\n   * Executes the given {@link HttpRequest}.\n   *\n   * @param request the request to execute.\n   * @return a Promise containing the response to executing the request.\n   */\n  execute(request: HttpRequest): Promise<HttpResponse>;\n}\n\nexport namespace HttpServiceClient {\n  export const factory: NamedServiceClientFactory<HttpServiceClient> = new class\n    implements NamedServiceClientFactory<HttpServiceClient> {\n    public getNamedClient(\n      service: CoreStitchServiceClient,\n      client: StitchAppClientInfo\n    ): HttpServiceClient {\n      return new HttpServiceClientImpl(new CoreHttpServiceClient(service));\n    }\n  }();\n}\n"],"names":["HttpMethod","HttpRequest","Builder","HttpCookie","name","value","path","domain","expires","maxAge","secure","httpOnly","this","url","method","authUrl","headers","cookies","body","encodeBodyAsJson","form","followRedirects","prototype","withUrl","withMethod","withAuthUrl","withHeaders","withCookies","withBody","withEncodeBodyAsJson","withForm","withFollowRedirects","build","Error","Fields","HttpResponse","status","statusCode","contentLength","RequestAction","HttpResponseDecoder","decode","document","Status","StatusCode","ContentLength","Headers","headersDoc_1","Object","keys","forEach","headerKey","valuesArr","values","Array","length","_i","valuesArr_1","push","undefined","Cookies","cookiesDoc_1","_a","cookieValues","CookieValue","CookiePath","CookieDomain","CookieExpires","CookieMaxAge","CookieSecure","CookieHttpOnly","put","Body","ResultDecoders","CoreHttpServiceClient","service","execute","request","action","GET","GetAction","POST","PostAction","PUT","PutAction","DELETE","DeleteAction","HEAD","HeadAction","PATCH","PatchAction","args","HttpUrlParam","HttpAuthUrlParam","HttpHeadersUrlParam","HttpCookiesParam","HttpBodyParam","HttpEncodeBodyAsJsonParam","HttpFormParam","HttpFollowRedirectsParam","callFunction","proxy","HttpServiceClientImpl","HttpServiceClient","class_1","client"],"mappings":"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"}