{"code":"import { CoreStitchAppClient, CoreStitchServiceClientImpl, StitchAppClientInfo, StitchRequestClient } from \"mongodb-stitch-core-sdk\";\r\nimport StitchAuthImpl from \"../auth/internal/StitchAuthImpl\";\r\nimport StitchBrowserAppRoutes from \"../auth/internal/StitchBrowserAppRoutes\";\r\nimport StitchServiceClientImpl from \"../../services/internal/StitchServiceClientImpl\";\r\nvar StitchAppClientImpl = (function () {\r\n    function StitchAppClientImpl(clientAppId, config) {\r\n        this.info = new StitchAppClientInfo(clientAppId, config.dataDirectory, config.localAppName, config.localAppVersion);\r\n        this.routes = new StitchBrowserAppRoutes(this.info.clientAppId, config.baseUrl);\r\n        var requestClient = new StitchRequestClient(config.baseUrl, config.transport);\r\n        this.auth = new StitchAuthImpl(requestClient, this.routes.authRoutes, config.storage, this.info);\r\n        this.coreClient = new CoreStitchAppClient(this.auth, this.routes);\r\n    }\r\n    StitchAppClientImpl.prototype.getServiceClient = function (factory, serviceName) {\r\n        if (isServiceClientFactory(factory)) {\r\n            return factory.getClient(new CoreStitchServiceClientImpl(this.auth, this.routes.serviceRoutes, \"\"), this.info);\r\n        }\r\n        else {\r\n            return factory.getNamedClient(new CoreStitchServiceClientImpl(this.auth, this.routes.serviceRoutes, serviceName), this.info);\r\n        }\r\n    };\r\n    StitchAppClientImpl.prototype.getGeneralServiceClient = function (serviceName) {\r\n        return new StitchServiceClientImpl(new CoreStitchServiceClientImpl(this.auth, this.routes.serviceRoutes, serviceName));\r\n    };\r\n    StitchAppClientImpl.prototype.callFunction = function (name, args) {\r\n        return this.coreClient.callFunction(name, args);\r\n    };\r\n    return StitchAppClientImpl;\r\n}());\r\nexport default StitchAppClientImpl;\r\nfunction isServiceClientFactory(factory) {\r\n    return factory.getClient !== undefined;\r\n}\r\n//# sourceMappingURL=StitchAppClientImpl.js.map","map":"{\"version\":3,\"file\":\"StitchAppClientImpl.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../src/core/internal/StitchAppClientImpl.ts\"],\"names\":[],\"mappings\":\"AAgBA,OAAO,EACL,mBAAmB,EACnB,2BAA2B,EAE3B,mBAAmB,EACnB,mBAAmB,EACpB,MAAM,yBAAyB,CAAC;AAGjC,OAAO,cAAc,MAAM,iCAAiC,CAAC;AAC7D,OAAO,sBAAsB,MAAM,yCAAyC,CAAC;AAI7E,OAAO,uBAAuB,MAAM,iDAAiD,CAAC;AAGtF;IAOE,6BACE,WAAmB,EACnB,MAAoC;QAEpC,IAAI,CAAC,IAAI,GAAG,IAAI,mBAAmB,CACjC,WAAW,EACX,MAAM,CAAC,aAAa,EACpB,MAAM,CAAC,YAAY,EACnB,MAAM,CAAC,eAAe,CACvB,CAAC;QACF,IAAI,CAAC,MAAM,GAAG,IAAI,sBAAsB,CACtC,IAAI,CAAC,IAAI,CAAC,WAAW,EACrB,MAAM,CAAC,OAAO,CACf,CAAC;QACF,IAAM,aAAa,GAAG,IAAI,mBAAmB,CAC3C,MAAM,CAAC,OAAO,EACd,MAAM,CAAC,SAAS,CACjB,CAAC;QACF,IAAI,CAAC,IAAI,GAAG,IAAI,cAAc,CAC5B,aAAa,EACb,IAAI,CAAC,MAAM,CAAC,UAAU,EACtB,MAAM,CAAC,OAAO,EACd,IAAI,CAAC,IAAI,CACV,CAAC;QACF,IAAI,CAAC,UAAU,GAAG,IAAI,mBAAmB,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;IACpE,CAAC;IAEM,8CAAgB,GAAvB,UACE,OAA+D,EAC/D,WAAoB;QAEpB,IAAI,sBAAsB,CAAC,OAAO,CAAC,EAAE;YACnC,OAAO,OAAO,CAAC,SAAS,CACtB,IAAI,2BAA2B,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,aAAa,EAAE,EAAE,CAAC,EACzE,IAAI,CAAC,IAAI,CACV,CAAC;SACH;aAAM;YACL,OAAO,OAAO,CAAC,cAAc,CAC3B,IAAI,2BAA2B,CAC7B,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,MAAM,CAAC,aAAa,EACzB,WAAY,CACb,EACD,IAAI,CAAC,IAAI,CACV,CAAC;SACH;IACH,CAAC;IAEM,qDAAuB,GAA9B,UAA+B,WAAmB;QAChD,OAAO,IAAI,uBAAuB,CAChC,IAAI,2BAA2B,CAC7B,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,MAAM,CAAC,aAAa,EACzB,WAAW,CACZ,CACF,CAAC;IACJ,CAAC;IAEM,0CAAY,GAAnB,UAAoB,IAAY,EAAE,IAAW;QAC3C,OAAO,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IAClD,CAAC;IACH,0BAAC;AAAD,CAAC,AApED,IAoEC;;AAED,gCACE,OAA+D;IAE/D,OAAQ,OAAmC,CAAC,SAAS,KAAK,SAAS,CAAC;AACtE,CAAC\"}","dts":{"name":"/Users/eric/stitch/stitch-js-sdk/packages/browser/core/.rpt2_cache/placeholder/core/internal/StitchAppClientImpl.d.ts","text":"import { StitchAppClientConfiguration } from \"mongodb-stitch-core-sdk\";\r\nimport NamedServiceClientFactory from \"../../services/internal/NamedServiceClientFactory\";\r\nimport ServiceClientFactory from \"../../services/internal/ServiceClientFactory\";\r\nimport StitchAuthImpl from \"../auth/internal/StitchAuthImpl\";\r\nimport StitchAppClient from \"../StitchAppClient\";\r\nimport StitchServiceClient from \"../../services/StitchServiceClient\";\r\nexport default class StitchAppClientImpl implements StitchAppClient {\r\n    readonly auth: StitchAuthImpl;\r\n    private readonly coreClient;\r\n    private readonly info;\r\n    private readonly routes;\r\n    constructor(clientAppId: string, config: StitchAppClientConfiguration);\r\n    getServiceClient<T>(factory: ServiceClientFactory<T> | NamedServiceClientFactory<T>, serviceName?: string): T;\r\n    getGeneralServiceClient(serviceName: string): StitchServiceClient;\r\n    callFunction(name: string, args: any[]): Promise<any>;\r\n}\r\n"}}
