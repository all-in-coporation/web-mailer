{"code":"import { Event } from \"mongodb-stitch-core-sdk\";\r\nvar EventSourceEventStream = (function () {\r\n    function EventSourceEventStream(evtSrc) {\r\n        var _this = this;\r\n        this.evtSrc = evtSrc;\r\n        this.events = [];\r\n        this.listeners = [];\r\n        this.evtSrc.onmessage = function (e) {\r\n            _this.events.push(new Event(Event.MESSAGE_EVENT, e.data));\r\n            _this.poll();\r\n        };\r\n        this.evtSrc.onerror = function (e) {\r\n            console.log(e);\r\n            _this.events.push(new Event(\"error\", e.data));\r\n            _this.close();\r\n            _this.poll();\r\n        };\r\n    }\r\n    EventSourceEventStream.prototype.poll = function () {\r\n        if (this.events.length === 0) {\r\n            return;\r\n        }\r\n        var event = this.events.pop();\r\n        for (var _i = 0, _a = this.listeners; _i < _a.length; _i++) {\r\n            var listener = _a[_i];\r\n            listener.onEvent(event);\r\n        }\r\n    };\r\n    EventSourceEventStream.prototype.addListener = function (listener) {\r\n        this.listeners.push(listener);\r\n        this.poll();\r\n    };\r\n    EventSourceEventStream.prototype.removeListener = function (listener) {\r\n        var index = this.listeners.indexOf(listener);\r\n        if (index === -1) {\r\n            return;\r\n        }\r\n        this.listeners.splice(index, 1);\r\n    };\r\n    EventSourceEventStream.prototype.listenOnce = function (listener) {\r\n        var _this = this;\r\n        var wrapper = {\r\n            onEvent: function (e) {\r\n                _this.removeListener(wrapper);\r\n                listener.onEvent(e);\r\n            }\r\n        };\r\n        this.addListener(wrapper);\r\n    };\r\n    EventSourceEventStream.prototype.nextEvent = function () {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            _this.listenOnce({\r\n                onEvent: function (e) {\r\n                    resolve(e);\r\n                }\r\n            });\r\n        });\r\n    };\r\n    EventSourceEventStream.prototype.close = function () {\r\n        this.evtSrc.close();\r\n    };\r\n    return EventSourceEventStream;\r\n}());\r\nexport default EventSourceEventStream;\r\n//# sourceMappingURL=EventSourceEventStream.js.map","map":"{\"version\":3,\"file\":\"EventSourceEventStream.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/core/internal/net/EventSourceEventStream.ts\"],\"names\":[],\"mappings\":\"AAgBA,OAAO,EACL,KAAK,EAEN,MAAM,yBAAyB,CAAC;AAIjC;IAOE,gCACE,MAAmB;QADrB,iBAiBC;QAdC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACjB,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QAEpB,IAAI,CAAC,MAAM,CAAC,SAAS,GAAG,UAAA,CAAC;YACvB,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,KAAK,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;YACzD,KAAI,CAAC,IAAI,EAAE,CAAC;QACd,CAAC,CAAC;QACF,IAAI,CAAC,MAAM,CAAC,OAAO,GAAG,UAAA,CAAC;YACrB,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YACf,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;YAC7C,KAAI,CAAC,KAAK,EAAE,CAAC;YACb,KAAI,CAAC,IAAI,EAAE,CAAC;QACd,CAAC,CAAA;IACH,CAAC;IAEO,qCAAI,GAAZ;QACE,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;YAC5B,OAAO;SACR;QACD,IAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,EAAG,CAAC;QACjC,KAAqB,UAAc,EAAd,KAAA,IAAI,CAAC,SAAS,EAAd,cAAc,EAAd,IAAc,EAAE;YAAhC,IAAI,QAAQ,SAAA;YACf,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;SACzB;IACH,CAAC;IAEO,4CAAW,GAAnB,UAAoB,QAAuB;QACzC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC9B,IAAI,CAAC,IAAI,EAAE,CAAC;IACd,CAAC;IAEO,+CAAc,GAAtB,UAAuB,QAAuB;QAC5C,IAAM,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;QAC/C,IAAI,KAAK,KAAK,CAAC,CAAC,EAAE;YAChB,OAAO;SACR;QACD,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;IAClC,CAAC;IAEO,2CAAU,GAAlB,UAAmB,QAAuB;QAA1C,iBAQC;QAPC,IAAM,OAAO,GAAG;YACd,OAAO,EAAE,UAAA,CAAC;gBACR,KAAI,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;gBAC7B,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YACtB,CAAC;SACF,CAAC;QACF,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;IAC5B,CAAC;IAEM,0CAAS,GAAhB;QAAA,iBAQC;QAPC,OAAO,IAAI,OAAO,CAAQ,UAAC,OAAO,EAAE,MAAM;YACxC,KAAI,CAAC,UAAU,CAAC;gBACd,OAAO,EAAE,UAAA,CAAC;oBACR,OAAO,CAAC,CAAC,CAAC,CAAC;gBACb,CAAC;aACF,CAAC,CAAA;QACJ,CAAC,CAAC,CAAC;IACL,CAAC;IAEM,sCAAK,GAAZ;QACE,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;IACtB,CAAC;IACH,6BAAC;AAAD,CAAC,AAxED,IAwEC\"}","dts":{"name":"/Users/eric/stitch/stitch-js-sdk/packages/browser/core/.rpt2_cache/placeholder/core/internal/net/EventSourceEventStream.d.ts","text":"import { Event, EventStream } from \"mongodb-stitch-core-sdk\";\r\nexport default class EventSourceEventStream implements EventStream {\r\n    private readonly evtSrc;\r\n    private events;\r\n    private lastErr;\r\n    private listeners;\r\n    constructor(evtSrc: EventSource);\r\n    private poll;\r\n    private addListener;\r\n    private removeListener;\r\n    private listenOnce;\r\n    nextEvent(): Promise<Event>;\r\n    close(): void;\r\n}\r\n"}}
