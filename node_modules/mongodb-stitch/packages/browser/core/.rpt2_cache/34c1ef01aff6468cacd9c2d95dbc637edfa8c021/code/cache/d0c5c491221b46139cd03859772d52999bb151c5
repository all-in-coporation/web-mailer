{"code":"import * as tslib_1 from \"tslib\";\r\nimport { CoreUserPassAuthProviderClient, UserPasswordAuthProvider } from \"mongodb-stitch-core-sdk\";\r\nvar UserPasswordAuthProviderClientImpl = (function (_super) {\r\n    tslib_1.__extends(UserPasswordAuthProviderClientImpl, _super);\r\n    function UserPasswordAuthProviderClientImpl(requestClient, routes) {\r\n        return _super.call(this, UserPasswordAuthProvider.DEFAULT_NAME, requestClient, routes) || this;\r\n    }\r\n    UserPasswordAuthProviderClientImpl.prototype.registerWithEmail = function (email, password) {\r\n        return _super.prototype.registerWithEmailInternal.call(this, email, password);\r\n    };\r\n    UserPasswordAuthProviderClientImpl.prototype.confirmUser = function (token, tokenId) {\r\n        return _super.prototype.confirmUserInternal.call(this, token, tokenId);\r\n    };\r\n    UserPasswordAuthProviderClientImpl.prototype.resendConfirmationEmail = function (email) {\r\n        return _super.prototype.resendConfirmationEmailInternal.call(this, email);\r\n    };\r\n    UserPasswordAuthProviderClientImpl.prototype.resetPassword = function (token, tokenId, password) {\r\n        return _super.prototype.resetPasswordInternal.call(this, token, tokenId, password);\r\n    };\r\n    UserPasswordAuthProviderClientImpl.prototype.sendResetPasswordEmail = function (email) {\r\n        return _super.prototype.sendResetPasswordEmailInternal.call(this, email);\r\n    };\r\n    return UserPasswordAuthProviderClientImpl;\r\n}(CoreUserPassAuthProviderClient));\r\nexport default UserPasswordAuthProviderClientImpl;\r\n//# sourceMappingURL=UserPasswordAuthProviderClientImpl.js.map","map":"{\"version\":3,\"file\":\"UserPasswordAuthProviderClientImpl.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../src/core/auth/providers/userpassword/internal/UserPasswordAuthProviderClientImpl.ts\"],\"names\":[],\"mappings\":\";AAgBA,OAAO,EACL,8BAA8B,EAG9B,wBAAwB,EACzB,MAAM,yBAAyB,CAAC;AAIjC;IACU,8DAA8B;IAEtC,4CACE,aAAkC,EAClC,MAAwB;eAExB,kBAAM,wBAAwB,CAAC,YAAY,EAAE,aAAa,EAAE,MAAM,CAAC;IACrE,CAAC;IAEM,8DAAiB,GAAxB,UAAyB,KAAa,EAAE,QAAgB;QACtD,OAAO,iBAAM,yBAAyB,YAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;IAC1D,CAAC;IAEM,wDAAW,GAAlB,UAAmB,KAAa,EAAE,OAAe;QAC/C,OAAO,iBAAM,mBAAmB,YAAC,KAAK,EAAE,OAAO,CAAC,CAAC;IACnD,CAAC;IAEM,oEAAuB,GAA9B,UAA+B,KAAa;QAC1C,OAAO,iBAAM,+BAA+B,YAAC,KAAK,CAAC,CAAC;IACtD,CAAC;IAEM,0DAAa,GAApB,UACE,KAAa,EACb,OAAe,EACf,QAAgB;QAEhB,OAAO,iBAAM,qBAAqB,YAAC,KAAK,EAAE,OAAO,EAAE,QAAQ,CAAC,CAAC;IAC/D,CAAC;IAEM,mEAAsB,GAA7B,UAA8B,KAAa;QACzC,OAAO,iBAAM,8BAA8B,YAAC,KAAK,CAAC,CAAC;IACrD,CAAC;IACH,yCAAC;AAAD,CAAC,AAjCD,CACU,8BAA8B,GAgCvC\"}","dts":{"name":"/Users/eric/stitch/stitch-js-sdk/packages/browser/core/.rpt2_cache/placeholder/core/auth/providers/userpassword/internal/UserPasswordAuthProviderClientImpl.d.ts","text":"import { CoreUserPassAuthProviderClient, StitchAuthRoutes, StitchRequestClient } from \"mongodb-stitch-core-sdk\";\r\nimport { UserPasswordAuthProviderClient } from \"../UserPasswordAuthProviderClient\";\r\nexport default class UserPasswordAuthProviderClientImpl extends CoreUserPassAuthProviderClient implements UserPasswordAuthProviderClient {\r\n    constructor(requestClient: StitchRequestClient, routes: StitchAuthRoutes);\r\n    registerWithEmail(email: string, password: string): Promise<void>;\r\n    confirmUser(token: string, tokenId: string): Promise<void>;\r\n    resendConfirmationEmail(email: string): Promise<void>;\r\n    resetPassword(token: string, tokenId: string, password: string): Promise<void>;\r\n    sendResetPasswordEmail(email: string): Promise<void>;\r\n}\r\n"}}
