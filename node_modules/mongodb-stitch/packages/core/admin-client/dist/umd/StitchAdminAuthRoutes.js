var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
(function (factory) {
    if (typeof module === "object" && typeof module.exports === "object") {
        var v = factory(require, exports);
        if (v !== undefined) module.exports = v;
    }
    else if (typeof define === "function" && define.amd) {
        define(["require", "exports", "./StitchAdminClient"], factory);
    }
})(function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var StitchAdminClient_1 = __importDefault(require("./StitchAdminClient"));
    var StitchAdminAuthRoutes = (function () {
        function StitchAdminAuthRoutes() {
        }
        Object.defineProperty(StitchAdminAuthRoutes.prototype, "baseAuthRoute", {
            get: function () {
                return StitchAdminClient_1.default.apiPath + "/auth";
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(StitchAdminAuthRoutes.prototype, "sessionRoute", {
            get: function () {
                return this.baseAuthRoute + "/session";
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(StitchAdminAuthRoutes.prototype, "profileRoute", {
            get: function () {
                return this.baseAuthRoute + "/profile";
            },
            enumerable: true,
            configurable: true
        });
        StitchAdminAuthRoutes.prototype.getAuthProviderRoute = function (providerName) {
            return this.baseAuthRoute + "/providers/" + providerName;
        };
        StitchAdminAuthRoutes.prototype.getAuthProviderLoginRoute = function (providerName) {
            return this.getAuthProviderRoute(providerName) + "/login";
        };
        StitchAdminAuthRoutes.prototype.getAuthProviderLinkRoute = function (providerName) {
            return this.getAuthProviderLoginRoute(providerName) + "?link=true";
        };
        StitchAdminAuthRoutes.prototype.getAuthProviderExtensionRoute = function (providerName, path) {
            return this.getAuthProviderRoute(providerName) + "/" + path;
        };
        return StitchAdminAuthRoutes;
    }());
    exports.default = StitchAdminAuthRoutes;
});
//# sourceMappingURL=StitchAdminAuthRoutes.js.map