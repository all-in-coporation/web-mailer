var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
(function (factory) {
    if (typeof module === "object" && typeof module.exports === "object") {
        var v = factory(require, exports);
        if (v !== undefined) module.exports = v;
    }
    else if (typeof define === "function" && define.amd) {
        define(["require", "exports", "mongodb-stitch-core-sdk", "./StitchAdminUser"], factory);
    }
})(function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var mongodb_stitch_core_sdk_1 = require("mongodb-stitch-core-sdk");
    var StitchAdminUser_1 = require("./StitchAdminUser");
    var StitchAdminAuth = (function (_super) {
        __extends(StitchAdminAuth, _super);
        function StitchAdminAuth(requestClient, authRoutes, storage) {
            return _super.call(this, requestClient, authRoutes, storage) || this;
        }
        Object.defineProperty(StitchAdminAuth.prototype, "userFactory", {
            get: function () {
                return new StitchAdminUser_1.StitchAdminUserFactory();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(StitchAdminAuth.prototype, "deviceInfo", {
            get: function () {
                var info = {};
                if (this.hasDeviceId) {
                    info[mongodb_stitch_core_sdk_1.DeviceFields.DEVICE_ID] = this.deviceId;
                }
                info[mongodb_stitch_core_sdk_1.DeviceFields.APP_ID] = "MongoDB Stitch Swift Admin Client";
                return info;
            },
            enumerable: true,
            configurable: true
        });
        StitchAdminAuth.prototype.onAuthEvent = function () {
        };
        return StitchAdminAuth;
    }(mongodb_stitch_core_sdk_1.CoreStitchAuth));
    exports.default = StitchAdminAuth;
});
//# sourceMappingURL=StitchAdminAuth.js.map