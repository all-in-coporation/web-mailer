(function (factory) {
    if (typeof module === "object" && typeof module.exports === "object") {
        var v = factory(require, exports);
        if (v !== undefined) module.exports = v;
    }
    else if (typeof define === "function" && define.amd) {
        define(["require", "exports"], factory);
    }
})(function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var StitchAdminUser = (function () {
        function StitchAdminUser(id, providerType, providerName, userProfile) {
            this.id = id;
            this.loggedInProviderType = providerType;
            this.loggedInProviderName = providerName;
            this.profile = userProfile;
        }
        Object.defineProperty(StitchAdminUser.prototype, "userType", {
            get: function () {
                return this.profile.userType;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(StitchAdminUser.prototype, "identities", {
            get: function () {
                return this.profile.identities;
            },
            enumerable: true,
            configurable: true
        });
        return StitchAdminUser;
    }());
    exports.StitchAdminUser = StitchAdminUser;
    var StitchAdminUserFactory = (function () {
        function StitchAdminUserFactory() {
        }
        StitchAdminUserFactory.prototype.makeUser = function (id, loggedInProviderType, loggedInProviderName, userProfile) {
            return new StitchAdminUser(id, loggedInProviderType, loggedInProviderName, userProfile);
        };
        return StitchAdminUserFactory;
    }());
    exports.StitchAdminUserFactory = StitchAdminUserFactory;
});
//# sourceMappingURL=StitchAdminUser.js.map