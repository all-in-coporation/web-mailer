import { HttpMethod } from "./HttpMethod";
export declare class HttpRequest {
    readonly url: string;
    readonly method: HttpMethod;
    readonly authUrl: string;
    readonly headers: Record<string, string[]>;
    readonly cookies: Record<string, string>;
    readonly body: any;
    readonly encodeBodyAsJson: boolean;
    readonly form: Record<string, string>;
    readonly followRedirects: boolean;
    constructor(url: string, method: HttpMethod, authUrl: string, headers: Record<string, string[]>, cookies: Record<string, string>, body: any, encodeBodyAsJson: boolean, form: Record<string, string>, followRedirects: boolean);
}
export declare namespace HttpRequest {
    class Builder {
        private url;
        private method;
        private authUrl;
        private headers;
        private cookies;
        private body;
        private encodeBodyAsJson;
        private form;
        private followRedirects;
        constructor();
        withUrl(url: string): this;
        withMethod(method: HttpMethod): this;
        withAuthUrl(authUrl: string): this;
        withHeaders(headers: Record<string, string[]>): this;
        withCookies(cookies: Record<string, string>): this;
        withBody(body: any): this;
        withEncodeBodyAsJson(encodeBodyAsJson: boolean): this;
        withForm(form: Record<string, string>): this;
        withFollowRedirects(followRedirects: boolean): this;
        build(): HttpRequest;
    }
}
